{
  "format_version": "1.10.0",
  "minecraft:client_entity": {
    "description": {
      "identifier": "minecraft:slime",
      "materials": {
        "default": "slime",
        "outer": "slime_outer",
        "hp": "entity_emissive_alpha"
      },
      "textures": {
        "default": "textures/entity/slime/slime",
        "health_green": "textures/heart/health_bar_green",
        "health_yellow": "textures/heart/health_bar_yellow",
        "health_red": "textures/heart/health_bar_red",
        "heart": "textures/heart/heart",
        "heart0": "textures/heart/heart0",
        "heart1": "textures/heart/heart1",
        "heart2": "textures/heart/heart2",
        "heart3": "textures/heart/heart3",
        "heart4": "textures/heart/heart4",
        "heart5": "textures/heart/heart5",
        "heart6": "textures/heart/heart6",
        "heart7": "textures/heart/heart7",
        "heart8": "textures/heart/heart8",
        "heart9": "textures/heart/heart9"
      },
      "particle_effects": {
        "dmg": "particle:damage"
    },
      "geometry": {
        "default": "geometry.slime",
        "armor": "geometry.slime.armor",
        "health_bar": "geometry.health_bar",
        "heart": "geometry.heart",
        "dmg": "geometry.dmg"
      },
      "animations": {
        "dmg_controller": "controller.animation.damage.root",
        "hp_offset": "animation.health_slime",
        "health_percentage": "animation.health_bar.percentage"
      },
      "scripts": {
        "pre_animation": [
          "variable.squish_factor = (query.previous_squish_value + (query.current_squish_value - query.previous_squish_value) * query.frame_alpha);",
          "variable.bounce = 1 / ((variable.squish_factor / (query.variant * 0.5 + 1)) + 1);",
          "variable.horizontal_scale_amount = variable.bounce * query.variant;",
          "variable.vertical_scale_amount = (1 / variable.bounce) * query.variant;",
          "variable.health = query.health / query.max_health;",
          "variable.health_color = math.round(query.health / query.max_health * 100) >= 50 ? 0 : ((math.round(query.health / query.max_health * 100) >= 25 && math.round(query.health / query.max_health * 100) < 50) ? 1 : 2);",
          "variable.first_digit = math.floor(query.health / 100);",
          "variable.second_digit = math.floor((math.mod(query.health, 100)) / 10);",
          "variable.third_digit = query.health - ((math.floor(query.health / 10)) * 10);"
        ],
        "animate": [
          "hp_offset",
          "health_percentage",
          "dmg_controller"
        ],
        "variables": {
          "variable.hp": "public"
        },
        "initialize": [
          "variable.hp = query.health;"
        ],
        "scaleX": "variable.horizontal_scale_amount",
        "scaleY": "variable.vertical_scale_amount",
        "scaleZ": "variable.horizontal_scale_amount"
      },
      "render_controllers": [
        "controller.render.slime",
        "controller.render.slime_armor",
        "controller.render.health_bar",
        "controller.render.heart",
        "controller.render.first_digit",
        "controller.render.second_digit",
        "controller.render.third_digit",
        "controller.render.dmg"
      ],
      "spawn_egg": {
        "texture": "spawn_egg",
        "texture_index": 10
      }
    }
  }
}